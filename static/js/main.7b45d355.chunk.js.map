{"version":3,"sources":["components/Input/Input.js","components/AddTodo/AddTodo.js","components/Checkbox/Checkbox.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/Button/Button.js","components/Filters/Filters.js","components/Alert/Alert.js","components/App/App.js","utils/fontawesome.js","index.js"],"names":["Input","props","react_default","a","createElement","className","concat","extraClass","type","placeholder","value","onChange","onKeyPress","onBlur","defaultProps","AddTodo","changeTodo","e","_this","changeAdd","enterTodo","enterAdd","clickAll","selectAll","_this2","this","totalTodos","onClick","index_es","icon","Input_Input","React","Component","Checkbox","id","checked","isChecked","htmlFor","text","Todo","state","handleChange","setState","target","checkTodo","completeTodoList","editTodo","editableTodoList","textTodo","updateTodoList","deleteTodo","removeTodoList","completeClass","isComplete","Checkbox_Checkbox","isEditable","TodoList","todos","map","todo","components_Todo_Todo","Object","assign","key","completeTodo","editableTodo","updateTodo","removeTodo","Button","sizeClass","size","typeClass","colorClass","color","Filters","clickFilter","filter","filterTodos","countCompleted","Button_Button","clearCompleted","Alert","App","countTodo","newTodo","displayTodos","todoAlert","handleKeyPress","toConsumableArray","handleComplete","countChecked","todoList","handleEditable","handleUpdate","todoState","handleRemove","completed","handleClickAll","showFilter","handleClearCompleted","handleFilterTodos","role","aria-label","components_AddTodo_AddTodo","length","Alert_Alert","TodoList_TodoList","Filters_Filters","library","add","faTrash","faTrashAlt","faPencilAlt","faTimesCircle","faInfoCircle","faChevronDown","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b45d355.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./input.scss\";\n\nexport const Input = props => {\n\treturn (\n\t\t<input\n\t\t\tclassName={`c-input ${props.extraClass}`}\n\t\t\ttype={props.type}\n\t\t\tplaceholder={props.placeholder}\n\t\t\tvalue={props.value}\n\t\t\tonChange={props.onChange} \n\t\t\tonKeyPress={props.onKeyPress} \n\t\t\tonBlur={props.onBlur} />\n\t);\n};\n\nInput.defaultProps = {\n\textraClass: '',\n    type: 'text'\n}\n\nInput.propTypes = {\n\textraClass: PropTypes.string,\n  \ttype: PropTypes.string,\n\tplaceholder: PropTypes.string,\n\tvalue: PropTypes.string,  \t\n\tonChange: PropTypes.func,\n\tonKeyPress: PropTypes.func,\n\tonBlur: PropTypes.func\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Input } from \"../Input/Input\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport \"./add-todo.scss\";\r\n\r\nclass AddTodo extends React.Component {\r\n    changeTodo = e => this.props.changeAdd(e);\r\n    enterTodo = e => this.props.enterAdd(e);\r\n    clickAll = () => this.props.selectAll();\r\n\r\n    render () {\r\n        return (\r\n            <div className='todo-add'>            \r\n                {this.props.totalTodos > 0 &&\r\n                    <div \r\n                        className='todo-add__all'\r\n                        onClick={this.clickAll}>\r\n                        <FontAwesomeIcon icon='chevron-down' />\r\n                    </div>\r\n                }\r\n\r\n                <Input\r\n                    placeholder='Write a new todo and press enter' \r\n                    extraClass='todo-add__input'\r\n                    value={this.props.value}\r\n                    onChange={(e) => this.changeTodo(e)} \r\n                    onKeyPress={(e) => this.enterTodo(e)} />                    \t\t\r\n            </div>       \r\n        );\r\n    }\r\n};\r\n\r\nexport default AddTodo;\r\n\r\nAddTodo.propTypes = { \r\n    totalTodos: PropTypes.number,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onKeyPress: PropTypes.func\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./checkbox.scss\";\n\nexport const Checkbox = props => {\n    return (\n        <div className={`c-checkbox ${props.extraClass}`}>\n            <input \n                className='c-checkbox__input' \n                type='checkbox' \n                id={props.id}\n                checked={props.isChecked}\n                onChange={props.onChange} />  \n                        \n            <label \n                className='c-checkbox__label' \n                htmlFor={props.id}>\n                {props.text}\n            </label>            \n        </div>\n    )\n}\n\nCheckbox.defaultProps = {\n    extraClass: ''\n}\n\nCheckbox.propTypes = {\n    extraClass: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    text: PropTypes.string\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Input } from \"../Input/Input\";\nimport { Checkbox } from \"../Checkbox/Checkbox\";\n\nimport \"./todo.scss\";\n\nclass Todo extends React.Component {\n\tstate = {\n\t\tid: this.props.id,\n\t\tvalue: this.props.text\n\t}\n\n\thandleChange = e => {\n\t\tthis.setState({value: e.target.value});\t\t\n\t}\n\n\tcheckTodo = (id, e) => this.props.completeTodoList(id, e);\n\teditTodo = id => this.props.editableTodoList(id);\n\ttextTodo = (state, e) => this.props.updateTodoList(state, e);\n\tdeleteTodo = id => this.props.removeTodoList(id);\t\t\n\n    render() {\t\t\t\n\t\tconst props = this.props;\n\t\tconst completeClass = props.isComplete ? 'is-complete' : '';\t\t\n\n        return (\t\n\t\t\t<li className={`todo ${completeClass}`}>\n\t\t\t\t<Checkbox\n\t\t\t\t\textraClass='todo__check'\n\t\t\t\t\tid={props.id}\t\n\t\t\t\t\tchecked={props.isComplete}\t\t\t\t\n\t\t\t\t\tonChange={() => this.checkTodo(props.id)} />\n\n\t\t\t\t{!props.isEditable ? (\t\t\t\t\t\n\t\t\t\t\t<div className='todo__text'>{this.state.value}</div>\n\n\t\t\t\t) : (\n\t\t\t\t\t<Input\t\t\t\t\t\t\n\t\t\t\t\t\textraClass='todo__input'\t\n\t\t\t\t\t\tvalue={this.state.value}\t\n\t\t\t\t\t\tonChange={this.handleChange} \n\t\t\t\t\t\tonBlur={(e) => this.textTodo(this.state, e)}\n\t\t\t\t\t\tonKeyPress={(e) => this.textTodo(this.state, e) } />\t\n\t\t\t\t)}\t\n\n\t\t\t\t<div \n\t\t\t\t\tclassName='todo__icon'\n\t\t\t\t\tonClick={() => this.editTodo(props.id)}>\t\t\n\t\t\t\t\t<FontAwesomeIcon icon='pencil-alt' />\t\t\t\t\t\t\t\n\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\n\t\t\t\t<div \n\t\t\t\t\tclassName='todo__icon'\n\t\t\t\t\tonClick={() => this.deleteTodo(props.id)}>\t\t\n\t\t\t\t\t<FontAwesomeIcon icon='trash-alt' />\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t\t\t\t\n\t\t)\n    }\n}\n\nexport default Todo;\n\nTodo.propTypes = {\n\tid: PropTypes.number,\n\tisComplete: PropTypes.bool,\n\tisEditable: PropTypes.bool,\n\ttext: PropTypes.string,\n\tcompleteTodoList: PropTypes.func,\n\teditableTodoList: PropTypes.func,\n\tremoveTodoList: PropTypes.func,\n\tupdateTodoList: PropTypes.func\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Todo from \"../Todo/Todo\";\r\nimport \"./todo-list.scss\";\r\n\r\nexport const TodoList = props => {    \r\n    return (\r\n        <ul className='todo-list'>\r\n            {props.todos.map(todo => \r\n                <Todo \r\n                    key={todo.id} \r\n                    {...todo} \r\n                    completeTodoList={props.completeTodo}\t\t\t\t\t\t\t\t\r\n                    editableTodoList={props.editableTodo}\t\r\n                    updateTodoList={props.updateTodo}\t\t\t\t\t\t\t\t\t\r\n                    removeTodoList={props.removeTodo} />\t\t\t\t\t\t\t \r\n            )} \r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = { \r\n    todo: PropTypes.arrayOf(PropTypes.element),\r\n    completeTodoList: PropTypes.func,\r\n    editableTodoList: PropTypes.func,\r\n    updateTodoList: PropTypes.func,    \r\n    removeTodoList: PropTypes.func\r\n};","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"./button.scss\";\r\n\r\nexport const Button = props => {  \r\n    const sizeClass = props.size ? `c-button--${props.size}` : '';\r\n    const typeClass = props.type ? `c-button--${props.type}` : '';\r\n    const colorClass = props.color ? `c-button--${props.color}` : '';\r\n\r\n    return (\r\n        <button\r\n            className={`c-button ${colorClass} ${typeClass} ${sizeClass} ${props.extraClass}`} \r\n            onClick={props.onClick}>\r\n            {props.icon\r\n                ? <FontAwesomeIcon\r\n                    icon={props.icon}\r\n                    className=\"c-button__icon\" />\r\n                : '' }            \r\n            {props.text}\r\n        </button>\r\n      );    \r\n};\r\n\r\nButton.defaultProps = {\r\n    type: '',\r\n    extraClass: '',\r\n    icon: '',\r\n    color: ''\r\n}\r\n\r\nButton.propTypes = { \r\n    type: PropTypes.string,\r\n    color: PropTypes.string,\r\n    size: PropTypes.string,\r\n    extraClass: PropTypes.string, \r\n    icon: PropTypes.string,\r\n    text: PropTypes.string.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Button } from \"../Button/Button\";\r\nimport \"./filters.scss\";\r\n\r\nexport const Filters = props => {\r\n    const clickCompleted = () => props.clearCompleted();\r\n    const clickFilter = filter => props.filterTodos(filter);\r\n\r\n\treturn (\r\n\t\t<ul className='todo-filters'>\r\n            <li>{props.totalTodos - props.countCompleted} items left</li>\r\n\r\n            <li>\r\n                <Button  \r\n                    size='small'\r\n                    text='All' \r\n                    color='crimson' \r\n                    onClick={() => clickFilter('All') } />\r\n            </li>\r\n\r\n            <li>\r\n                <Button \r\n                    size='small'\r\n                    text='Active' \r\n                    color='crimson'\r\n                    onClick={() => clickFilter('Active') } />\r\n            </li>\r\n\r\n            <li>\r\n                <Button  \r\n                    size='small'\r\n                    text='Completed' \r\n                    color='crimson' \r\n                    onClick={() => clickFilter('Completed') } />\r\n            </li>\t\r\n\r\n            {props.countCompleted > 0 &&\t\t\t\t\r\n                <li>\r\n                    <Button  \r\n                        type='link'\r\n                        size='small'\r\n                        text='Clear completed' \r\n                        onClick={() => clickCompleted() } />\r\n                </li>\r\n            }\r\n        </ul>        \r\n\t);\r\n};\r\n\r\nFilters.propTypes = { \r\n    countCompleted: PropTypes.number,\r\n    totalTodos: PropTypes.number,\r\n    clearCompleted: PropTypes.func,\r\n    filterTodos: PropTypes.func\r\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport \"./alert.scss\";\n\nexport const Alert = props => {\n    const type = props.type ? `c-alert--${props.type}` : '';    \n\n    return (\n        <div className={`c-alert ${type} ${props.extraClass}`}>\n            <div className='c-alert__icon'>\n                <FontAwesomeIcon icon={props.icon} />\n            </div>            \n            <p className='c-alert__text'>{props.text}</p>\n        </div>\n    )\n}\n\nAlert.defaultProps = {\n    extraClass: '',\n    icon: 'info-circle'\n}\n\nAlert.propTypes = {\n    type: PropTypes.string,\n    extraClass: PropTypes.string,    \n    icon: PropTypes.string,\n    text: PropTypes.string.isRequired\n};","import React from \"react\";\n\n// Components\nimport AddTodo from \"../AddTodo/AddTodo\";\nimport { TodoList} from \"../TodoList/TodoList\";\nimport { Filters } from \"../Filters/Filters\";\nimport { Alert } from \"../Alert/Alert\";\n\nimport \"./app.scss\";\n\nclass App extends React.Component {\t\n    state = {\t\n\t\tcountTodo: 1,\n\t\tcountCompleted: 0,\t\t\t\n        newTodo: \"\",\n\t\ttodos: [],\n\t\tdisplayTodos: [],\n\t\ttodoAlert: false,\n\t\tselectAll: false,\n\t\tfilter: 'All'\t\t\n\t};\n\t\n\thandleChange = e => {\n\t\tthis.setState({newTodo: e.target.value});\n\t}\t\n\t\n\thandleKeyPress = e => {\n\t\tif (e.key === \"Enter\") {\n\n\t\t\tthis.state.newTodo === ''\n\t\t\t\t? this.setState({todoAlert: true})\n\t\t\t\t: this.setState({\t\n\t\t\t\t\tcountTodo: this.state.countTodo + 1,\t\t\t\n\t\t\t\t\tnewTodo: '',\n\t\t\t\t\ttodos: [...this.state.todos, { \n\t\t\t\t\t\tid: this.state.countTodo, \n\t\t\t\t\t\ttext: this.state.newTodo,\n\t\t\t\t\t\tisEditable: false,\n\t\t\t\t\t\tisComplete: false\n\t\t\t\t\t}],\n\t\t\t\t\ttodoAlert: false\n\t\t\t\t})\n\t\t}\n\t}\n\n\t// marcar todo como completado\n\thandleComplete = id => {\n\t\tlet countChecked = 0;\n\t\tconst todoList = this.state.todos.filter(todo => { \n\t\t\tif (todo.id === id) todo.isComplete = !todo.isComplete;\n\t\t\tif (todo.isComplete) countChecked++;\n\t\t\treturn todo;\t\t\t\t\n\t\t})\n\t\t\n\t\tthis.setState({\t\n\t\t\tcountCompleted: countChecked,\n\t\t\ttodos: todoList\n\t\t});\n\t}\n\n\t// hace editable el todo de la lista\n\thandleEditable = id => {\t\t\n\t\tthis.setState({\t\n\t\t\ttodos: this.state.todos.filter(todo => { \n\t\t\t\tif (todo.id === id) todo.isEditable = true;\n\t\t\t\treturn todo;\t\t\t\t\n\t\t\t})\n\t\t});\n\t}\n\n\t// actualiza el todo con el nuevo texto\n\thandleUpdate = (todoState, e) => {\t\t\t\n\t\tif ( e.type=== 'blur' || (e.type=== 'keypress' && e.key === \"Enter\")) {\n\t\t\tthis.setState({\t\n\t\t\t\ttodos: this.state.todos.filter(todo => { \n\t\t\t\t\tif(todo.id === todoState.id) {\n\t\t\t\t\t\ttodo.text = todoState.value;\n\t\t\t\t\t\ttodo.isEditable = false;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\treturn todo;\t\t\t\t\n\t\t\t\t})\n\t\t\t});\t\n\t\t}\t\n\t}\n\t\n\t// eliminar todo de la lista\n\thandleRemove = id => {\t\n\t\tlet completed = this.state.countCompleted;\n\t\tthis.state.todos.filter(todo => {\n\t\t\tif (todo.id === id && todo.isComplete ) completed--;\n\t\t\treturn completed;\t\t\t \n\t\t})\t\t\n\n\t\tthis.setState({\n\t\t\ttodos: this.state.todos.filter(todo => todo.id !== id),\n\t\t\tcountCompleted: completed\n\t\t});\n\t}\t\n\n\t// seleccionar/deseleccionar todos los todos \n\thandleClickAll = () => {\t\n\t\tlet completed = 0;\n\t\tconst todoList = this.state.todos.map(todo => { \n\t\t\tif (todo.isComplete !== !this.state.selectAll) {\n\t\t\t\ttodo.isComplete = !this.state.selectAll;\n\t\t\t}\t\n\t\t\tif (todo.isComplete) completed++;\t\t\t\n\t\t\treturn todo;\t\t\t \t\t\t\t\n\t\t})\n\t\t\n\t\tthis.setState({\t\n\t\t\ttodos: todoList,\n\t\t\tselectAll: !this.state.selectAll,\n\t\t\tcountCompleted: completed\n\t\t})\n\n\t\tlet displayTodos = showFilter(this.state.todos, this.state.filter);\n\t\tthis.setState({displayTodos});\n\t}\n\n\t// eliminar todos completados\n\thandleClearCompleted = () => {\n\t\tthis.setState({\n\t\t\ttodos: this.state.todos.filter(todo => !todo.isComplete),\n\t\t\tdisplayTodos: this.state.displayTodos.filter(todo => !todo.isComplete),\n\t\t\tcountCompleted: 0\n\t\t});\t\t\n\t}\n\n\t// filtrar todos\n\thandleFilterTodos = filter => {\n\t\tlet actualFilter = this.state.filter;\n\t\tif (filter !== actualFilter) this.setState({filter});\t\n\t\tlet displayTodos = showFilter(this.state.todos, filter);\n\t\tthis.setState({displayTodos});\n\t}\n\n    render() {\n        return (\n\t\t\t<div className='l-container'>\t\t\t\t\n\t\t\t\t<span className='app__icon' role='img' aria-label='app icons'>📝👩🏻📝</span>\n\t\t\t\t<h1 className='app__title'>React Todo List</h1>\n\t\t\t\t<p className='app__description'>Add, edit and delete all your tasks thanks to the magic of classic react.</p>\t\t\t\t\n\n\t\t\t\t<AddTodo \n\t\t\t\t\ttotalTodos={this.state.todos.length}\n\t\t\t\t\tvalue={this.state.newTodo} \t\t\t\t\t\n\t\t\t\t\tchangeAdd={this.handleChange} \n\t\t\t\t\tenterAdd={this.handleKeyPress} \n\t\t\t\t\tselectAll={this.handleClickAll} />\t\n\n\t\t\t\t{this.state.todoAlert &&\n\t\t\t\t\t<Alert \n\t\t\t\t\t\ttype='error'\n\t\t\t\t\t\ticon='times-circle'\n\t\t\t\t\t\textraClass='margin-top-10'\n\t\t\t\t\t\ttext='Empty todo? You have to write something dude' />\n\t\t\t\t}\t\t\t\t\t\t\t\t\n\n\t\t\t\t{this.state.todos.length > 0 &&\n\t\t\t\t\t<TodoList \n\t\t\t\t\t\ttodos={this.state.filter === 'All'\n\t\t\t\t\t\t\t? this.state.todos \n\t\t\t\t\t\t\t: this.state.displayTodos }\t\t\t\t\t\n\t\t\t\t\t\tfilter={this.state.filter}\n\t\t\t\t\t\tcompleteTodo={this.handleComplete}\t\t\t\t\t\t\t\t\n                        editableTodo={this.handleEditable}\n                        updateTodo={this.handleUpdate}\t\t\t\t\t\t\t\t\n                        removeTodo={this.handleRemove} />\t\t\t\t\n\t\t\t\t}  \n\t\t\t\t\n\t\t\t\t<Filters \n\t\t\t\t\ttotalTodos={this.state.todos.length}\n\t\t\t\t\tcountCompleted={this.state.countCompleted}\n\t\t\t\t\tclearCompleted={this.handleClearCompleted} \n\t\t\t\t\tfilterTodos={this.handleFilterTodos} />\t\t\t\t            \n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n// Devolver array para mostrar \nconst showFilter = (todos, filter) => {\t\n\tif (filter === 'Active') return todos.filter(todo => !todo.isComplete );\n\telse if (filter === 'Completed') return todos.filter(todo => todo.isComplete );\n\telse return todos;\n}","// Fontawesome Icons\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport {\r\n  faTrash, faTrashAlt, faPencilAlt, faTimesCircle, faInfoCircle, faChevronDown\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(\r\n  faTrash,\r\n  faTrashAlt,\r\n  faPencilAlt,\r\n  faTimesCircle,\r\n  faInfoCircle,\r\n  faChevronDown\r\n);\r\n\r\nexport default library;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nimport \"./utils/fontawesome\";\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}